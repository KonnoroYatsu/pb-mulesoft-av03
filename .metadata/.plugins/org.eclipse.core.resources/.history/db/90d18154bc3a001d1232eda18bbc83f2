package com.avaliacao03.avaliacao03.config.validacao;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpStatus;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class ErroDeValidacaoHandler {

	@Autowired
	private MessageSource messageSource;
	/*
	@ResponseStatus(code = HttpStatus.BAD_REQUEST)
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public List<FieldError> handler(MethodArgumentNotValidException exception){
		//List<FieldError> fieldErrors = exception.getBindingResult().getFieldErrors();
		String str2 = exception.getFieldError().getField();
		String str1 = exception.getFieldError().getDefaultMessage();
		return fieldErrors;
	}
	*/
	
	@ResponseStatus(code = HttpStatus.BAD_REQUEST)
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public List<String> handler(MethodArgumentNotValidException exception){
		List<String> erros = new ArrayList<String>();
		List<FieldError> fieldErrors = exception.getBindingResult().getFieldErrors();
		for(int i = 0; i < fieldErrors.size(); i++) {
			String str = "o Campo ";
			str += fieldErrors.get(i).getField() + " ";
			str += messageSource.getMessage(fieldErrors.get(i), LocaleContextHolder.getLocale());
			erros.add(str);
		}
		return erros;
	}
}
